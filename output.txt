Mon Oct  7 14:29:24 PDT 2019

*** compiling with clang++ to create an executable called myprogram
clang version 9.0.0 (tags/RELEASE_900/final)
Target: x86_64-apple-darwin16.7.0
Thread model: posix
InstalledDir: /Users/pisan/homebrew/opt/llvm/bin

*** running clang-tidy using options from .clang-tidy
LLVM (http://llvm.org/):
  LLVM version 9.0.0
  Optimized build.
  Default target: x86_64-apple-darwin16.7.0
  Host CPU: skylake
22253 warnings generated.
41903 warnings generated.
Suppressed 41913 warnings (41903 in non-user code, 10 NOLINT).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

*** running myprogram
Starting testPisan01
* Testing == and !=
Ending testPisan01
Starting testPisan02
* Testing == and != with more detail
Ending testPisan02
Starting testPisan03
* Testing traversal
Visual check B1:
                x
            g
        f
    c
        a

            ___________c____________            
      _____a______            _____f______      
   __N___      __N___      __N___      __g___   
  N     N     N     N     N     N     N     x   

Ending testPisan03
Starting testSample01
Ending testSample01
Done!

*** running with valgrind
==38664== Memcheck, a memory error detector
==38664== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==38664== Using Valgrind-3.15.0.GIT and LibVEX; rerun with -h for copyright info
==38664== Command: ./myprogram
==38664== 
Starting testPisan01
* Testing == and !=
Ending testPisan01
Starting testPisan02
* Testing == and != with more detail
Ending testPisan02
Starting testPisan03
* Testing traversal
Visual check B1:
                x
            g
        f
    c
        a

            ___________c____________            
      _____a______            _____f______      
   __N___      __N___      __N___      __g___   
  N     N     N     N     N     N     N     x   

Ending testPisan03
Starting testSample01
Ending testSample01
Done!
==38664== 
==38664== HEAP SUMMARY:
==38664==     in use at exit: 22,388 bytes in 159 blocks
==38664==   total heap usage: 213 allocs, 54 frees, 34,396 bytes allocated
==38664== 
==38664== LEAK SUMMARY:
==38664==    definitely lost: 0 bytes in 0 blocks
==38664==    indirectly lost: 0 bytes in 0 blocks
==38664==      possibly lost: 72 bytes in 3 blocks
==38664==    still reachable: 4,296 bytes in 7 blocks
==38664==         suppressed: 18,020 bytes in 149 blocks
==38664== Reachable blocks (those to which a pointer was found) are not shown.
==38664== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==38664== 
==38664== For lists of detected and suppressed errors, rerun with: -s
==38664== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 11 from 11)
*** cleaning up, deleting myprogram
Mon Oct  7 14:29:40 PDT 2019
